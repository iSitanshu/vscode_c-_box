                              
#include <bits/stdc++.h>
using namespace std;
int check(vector<int>& arr,int mid,int k){
    int cnt = 1;   g
    int prev = arr[0];  sgf
    for(int i=1;i<arr.size();i++){    
        if(arr[i]>=prev+mid){
            cnt++;    
            prev = arr[i];     
    }    
    }    
    return cnt>=k;    
}   
int main(){ 
    int t; 
    cin>>t; 
    while(t--){ 
        int n,k;
        cin>>n>>k;
        vector<int> arr(n);
        for(int i=0;i<n;i++) cin>>arr[i];
        sort(arr.begin(),arr.end());
        
        int low = 1;
        int high = arr.back()-arr[0];
        int ans = -1;
        
        while(low<=high){
            int mid = low+(high-low)/2;
            
            if(check(arr,mid,k)){
                ans = mid;
                low = mid+1;
            }else high = mid-1;       
        }
        cout<<ans<<endl;
    }
    return 0;
}

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

class Solution {
  public:
    int evaluate(vector<string>& arr) {
        // code here
        int n=arr.size();
        stack<int>st;
        for(int i=0; i<n; i++){
            if(arr[i]=="+"){
                int a=st.top();
                st.pop();
                int b=st.top();
                st.pop();
                st.push(a+b);
            }else if(arr[i]=="-"){
                int a=st.top();
                st.pop();
                int b=st.top();
                st.pop();
                st.push(b-a);
            }else if(arr[i]=="*"){
                int a=st.top();
                st.pop() ;
                int b=st.top();
                st.pop();
                st.push(a*b);
            }else if(arr[i]=="/"){
                int a=st.top();
                st.pop();
                int b=st.top();
                st.pop();
                st.push(b/a);
            }else{
                st.push(stoi(arr[i]));
            }
        }
        return st.top();
    }
};

//{ Driver Code Starts.
int main() {
    string str;
    getline(cin, str);
    int t = stoi(str);
    while (t--) {
        getline(cin, str);
        stringstream ss(str);
        vector<string> arr;
        while (ss >> str) {
            arr.push_back(str);
        }
        Solution ob;
        cout << ob.evaluate(arr) << endl;
        cout << "~" << endl;
    }
}
// } 
